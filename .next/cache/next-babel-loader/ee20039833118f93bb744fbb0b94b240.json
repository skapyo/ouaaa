{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\skaPy\\\\IdeaProjects\\\\Next.js-boilerplate\\\\oozie-client\\\\pages\\\\_app.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query isLogged {\\n    isLogged {\\n      id\\n      surname\\n      lastname\\n      email\\n      role\\n      phone\\n      address\\n      postCode\\n      city\\n      }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Head from 'next/head';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { red } from '@material-ui/core/colors';\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport MomentUtils from '@date-io/moment';\nimport gql from 'graphql-tag';\nimport { SessionProvider } from 'context/session/session';\nimport omitTypename from 'utils/omitTypename';\nimport { SnackbarProvider } from 'notistack';\nvar theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#484848'\n    },\n    secondary: {\n      main: '#25AAA4'\n    },\n    error: {\n      main: red.A400\n    },\n    background: {\n      \"default\": '#fff'\n    },\n    text: {\n      primary: '#3c3b37'\n    },\n    lightBox: {\n      main: '#F7F7F7'\n    }\n  },\n  typography: {\n    body1: {\n      lineHeight: 1.7\n    }\n  }\n});\n\nvar MyApp = function MyApp(props) {\n  _s();\n\n  var Component = props.Component,\n      pageProps = props.pageProps,\n      user = props.user;\n  React.useEffect(function () {\n    // Remove the server-side injected CSS.\n    var jssStyles = document.querySelector('#jss-server-side');\n\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n  }, []);\n  return __jsx(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"My page\"), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"minimum-scale=1, initial-scale=1, width=device-width\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })), __jsx(MuiPickersUtilsProvider, {\n    utils: MomentUtils,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, __jsx(ThemeProvider, {\n    theme: theme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, __jsx(SessionProvider, {\n    init: user,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, __jsx(CssBaseline, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }), __jsx(SnackbarProvider, {\n    maxSnack: 3,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'right'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  })))))));\n};\n\n_s(MyApp, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = MyApp;\nvar ISLOGGED = gql(_templateObject());\n\nMyApp.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var user, _result$data, _result$data$isLogged, _yield$import, initOnContext, apolloClientCtx, result;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            user = null;\n\n            if (!false) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.next = 4;\n            return import('hoc/withApollo');\n\n          case 4:\n            _yield$import = _context.sent;\n            initOnContext = _yield$import.initOnContext;\n            apolloClientCtx = initOnContext(ctx);\n            _context.next = 9;\n            return apolloClientCtx.ctx.apolloClient.query({\n              query: ISLOGGED\n            });\n\n          case 9:\n            result = _context.sent;\n\n            if ((_result$data = result.data) === null || _result$data === void 0 ? void 0 : (_result$data$isLogged = _result$data.isLogged) === null || _result$data$isLogged === void 0 ? void 0 : _result$data$isLogged.id) {\n              // user = {\n              //   id : result.data.isLogged.id\n              // }\n              user = omitTypename(result.data.isLogged);\n            }\n\n          case 11:\n            if (!user) {\n              _context.next = 13;\n              break;\n            }\n\n            return _context.abrupt(\"return\", {\n              user: user\n            });\n\n          case 13:\n            return _context.abrupt(\"return\", {});\n\n          case 14:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nMyApp.propTypes = {\n  Component: PropTypes.elementType.isRequired,\n  pageProps: PropTypes.object\n};\nexport default MyApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApp\");","map":{"version":3,"sources":["C:/Users/skaPy/IdeaProjects/Next.js-boilerplate/oozie-client/pages/_app.js"],"names":["React","PropTypes","Head","ThemeProvider","CssBaseline","createMuiTheme","red","MuiPickersUtilsProvider","MomentUtils","gql","SessionProvider","omitTypename","SnackbarProvider","theme","palette","primary","main","secondary","error","A400","background","text","lightBox","typography","body1","lineHeight","MyApp","props","Component","pageProps","user","useEffect","jssStyles","document","querySelector","parentElement","removeChild","vertical","horizontal","ISLOGGED","getInitialProps","ctx","initOnContext","apolloClientCtx","apolloClient","query","result","data","isLogged","id","propTypes","elementType","isRequired","object"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Head from 'next/head';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { red } from '@material-ui/core/colors';\r\nimport { MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport MomentUtils from '@date-io/moment';\r\nimport gql from 'graphql-tag';\r\nimport { SessionProvider } from 'context/session/session';\r\nimport omitTypename from 'utils/omitTypename'\r\nimport { SnackbarProvider } from 'notistack';\r\n\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#484848',\r\n    },\r\n    secondary: {\r\n      main: '#25AAA4',\r\n    },\r\n    error: {\r\n      main: red.A400,\r\n    },\r\n    background: {\r\n      default: '#fff',\r\n    },\r\n    text : {\r\n      primary : '#3c3b37'\r\n    },\r\n    lightBox : {\r\n      main :'#F7F7F7'\r\n    }\r\n  },\r\n  typography : {\r\n    body1 : {\r\n      lineHeight : 1.7\r\n    }\r\n  }\r\n});\r\n\r\nconst MyApp = (props )  => {\r\n  const { Component, pageProps, user } = props;\r\n\r\n  React.useEffect(() => {\r\n    // Remove the server-side injected CSS.\r\n    const jssStyles = document.querySelector('#jss-server-side');\r\n    if (jssStyles) {\r\n      jssStyles.parentElement.removeChild(jssStyles);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Head>\r\n        <title>My page</title>\r\n        <meta name=\"viewport\" content=\"minimum-scale=1, initial-scale=1, width=device-width\" />\r\n      </Head>\r\n      <MuiPickersUtilsProvider utils={MomentUtils}>\r\n        <ThemeProvider theme={theme}>\r\n          <SessionProvider init={user}>\r\n            {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\r\n            <CssBaseline />\r\n            <SnackbarProvider \r\n              maxSnack={3}\r\n              anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'right',\r\n              }}\r\n            >\r\n              <Component {...pageProps} />\r\n            </SnackbarProvider>\r\n          </SessionProvider>\r\n        </ThemeProvider>\r\n      </MuiPickersUtilsProvider>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nconst ISLOGGED = gql`\r\n  query isLogged {\r\n    isLogged {\r\n      id\r\n      surname\r\n      lastname\r\n      email\r\n      role\r\n      phone\r\n      address\r\n      postCode\r\n      city\r\n      }\r\n  }\r\n`\r\n\r\nMyApp.getInitialProps = async(ctx) => {\r\n\r\n  let user = null\r\n\r\n  if(typeof window === 'undefined') {\r\n    const {initOnContext} = await import('hoc/withApollo')\r\n    const apolloClientCtx = initOnContext(ctx)\r\n    const result = await apolloClientCtx.ctx.apolloClient.query({query:ISLOGGED})\r\n    if(result.data?.isLogged?.id) {\r\n      // user = {\r\n      //   id : result.data.isLogged.id\r\n      // }\r\n      user = omitTypename(result.data.isLogged)\r\n    }\r\n\r\n\r\n  }\r\n\r\n  if (user)\r\n    return ({user})\r\n  return ({})\r\n}\r\n\r\nMyApp.propTypes = {\r\n  Component: PropTypes.elementType.isRequired,\r\n  pageProps: PropTypes.object\r\n};\r\n\r\nexport default MyApp"]},"metadata":{},"sourceType":"module"}
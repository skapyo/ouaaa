{"ast":null,"code":"/*eslint no-useless-escape: 0*/\nvar validateEmailFormat = function validateEmailFormat(email) {\n  var re = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n  return re.test(String(email).toLowerCase());\n};\n\nexport default validateEmailFormat; // const validateEmailFormat = (email ) => {\n//     const re = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n//     return re.test(String(email).toLowerCase());\n// };\n// export default validateEmailFormat","map":{"version":3,"sources":["C:/Users/skaPy/IdeaProjects/Next.js-boilerplate/oozie-client/utils/validateEmailFormat.tsx"],"names":["validateEmailFormat","email","re","test","String","toLowerCase"],"mappings":"AAAA;AAEA,IAAMA,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,KAAD,EAA8B;AACtD,MAAMC,EAAE,GAAG,wHAAX;AACA,SAAOA,EAAE,CAACC,IAAH,CAAQC,MAAM,CAACH,KAAD,CAAN,CAAcI,WAAd,EAAR,CAAP;AACH,CAHD;;AAKA,eAAeL,mBAAf,C,CAEA;AACA;AACA;AACA;AAEA","sourcesContent":["/*eslint no-useless-escape: 0*/\r\n\r\nconst validateEmailFormat = (email : string) : boolean => {\r\n    const re = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n    return re.test(String(email).toLowerCase());\r\n};\r\n\r\nexport default validateEmailFormat\r\n\r\n// const validateEmailFormat = (email ) => {\r\n//     const re = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n//     return re.test(String(email).toLowerCase());\r\n// };\r\n\r\n// export default validateEmailFormat\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\skaPy\\\\IdeaProjects\\\\Next.js-boilerplate\\\\oozie-client\\\\context\\\\session\\\\session.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nvar SessionStateContext = React.createContext();\nvar SessionDispatchContext = React.createContext();\n\nfunction authReducer(state, action) {\n  switch (action.type) {\n    case \"login\":\n      {\n        return _objectSpread({}, action.payload);\n      }\n\n    case \"logout\":\n      {\n        return null;\n      }\n\n    default:\n      {\n        throw new Error(\"Unhandled action type: \".concat(action.type));\n      }\n  }\n}\n\nfunction SessionProvider(_ref) {\n  _s();\n\n  var children = _ref.children,\n      _ref$init = _ref.init,\n      init = _ref$init === void 0 ? null : _ref$init;\n\n  var _React$useReducer = React.useReducer(authReducer, init),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  return __jsx(SessionStateContext.Provider, {\n    value: state,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, __jsx(SessionDispatchContext.Provider, {\n    value: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, children));\n}\n\n_s(SessionProvider, \"nMAworsfJtueYzYRzQuttmzsWRA=\");\n\n_c = SessionProvider;\n\nfunction useSessionState() {\n  _s2();\n\n  var context = React.useContext(SessionStateContext);\n\n  if (context === undefined) {\n    throw new Error(\"useSessionState must be used within a SessionProvider\");\n  }\n\n  return context;\n}\n\n_s2(useSessionState, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nfunction useSessionDispatch() {\n  _s3();\n\n  var context = React.useContext(SessionDispatchContext);\n\n  if (context === undefined) {\n    throw new Error(\"useSessionDispatch must be used within a SessionProvider\");\n  }\n\n  return context;\n}\n\n_s3(useSessionDispatch, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport { SessionProvider, useSessionState, useSessionDispatch };\n\nvar _c;\n\n$RefreshReg$(_c, \"SessionProvider\");","map":{"version":3,"sources":["C:/Users/skaPy/IdeaProjects/Next.js-boilerplate/oozie-client/context/session/session.js"],"names":["React","SessionStateContext","createContext","SessionDispatchContext","authReducer","state","action","type","payload","Error","SessionProvider","children","init","useReducer","dispatch","useSessionState","context","useContext","undefined","useSessionDispatch"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,mBAAmB,GAAGD,KAAK,CAACE,aAAN,EAA5B;AACA,IAAMC,sBAAsB,GAAGH,KAAK,CAACE,aAAN,EAA/B;;AAEA,SAASE,WAAT,CAAqBC,KAArB,EAA4BC,MAA5B,EAAoC;AAClC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,OAAL;AAAc;AACZ,iCAAWD,MAAM,CAACE,OAAlB;AACD;;AACD,SAAK,QAAL;AAAe;AACb,eAAO,IAAP;AACD;;AACD;AAAS;AACP,cAAM,IAAIC,KAAJ,kCAAoCH,MAAM,CAACC,IAA3C,EAAN;AACD;AATH;AAWD;;AAED,SAASG,eAAT,OAAkD;AAAA;;AAAA,MAAvBC,QAAuB,QAAvBA,QAAuB;AAAA,uBAAbC,IAAa;AAAA,MAAbA,IAAa,0BAAR,IAAQ;;AAAA,0BAEtBZ,KAAK,CAACa,UAAN,CAAiBT,WAAjB,EAA8BQ,IAA9B,CAFsB;AAAA;AAAA,MAEzCP,KAFyC;AAAA,MAElCS,QAFkC;;AAIhD,SACE,MAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAET,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,sBAAD,CAAwB,QAAxB;AAAiC,IAAA,KAAK,EAAES,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,QADH,CADF,CADF;AAOD;;GAXQD,e;;KAAAA,e;;AAaT,SAASK,eAAT,GAA2B;AAAA;;AACzB,MAAMC,OAAO,GAAGhB,KAAK,CAACiB,UAAN,CAAiBhB,mBAAjB,CAAhB;;AACA,MAAIe,OAAO,KAAKE,SAAhB,EAA2B;AACzB,UAAM,IAAIT,KAAJ,CAAU,uDAAV,CAAN;AACD;;AACD,SAAOO,OAAP;AACD;;IANQD,e;;AAQT,SAASI,kBAAT,GAA8B;AAAA;;AAC5B,MAAMH,OAAO,GAAGhB,KAAK,CAACiB,UAAN,CAAiBd,sBAAjB,CAAhB;;AACA,MAAIa,OAAO,KAAKE,SAAhB,EAA2B;AACzB,UAAM,IAAIT,KAAJ,CAAU,0DAAV,CAAN;AACD;;AACD,SAAOO,OAAP;AACD;;IANQG,kB;;AAST,SAAST,eAAT,EAA0BK,eAA1B,EAA2CI,kBAA3C","sourcesContent":["import React from \"react\";\r\n\r\nconst SessionStateContext = React.createContext();\r\nconst SessionDispatchContext = React.createContext();\r\n\r\nfunction authReducer(state, action) {\r\n  switch (action.type) {\r\n    case \"login\": {\r\n      return {...action.payload};\r\n    }\r\n    case \"logout\": {\r\n      return null;\r\n    }\r\n    default: {\r\n      throw new Error(`Unhandled action type: ${action.type}`);\r\n    }\r\n  }\r\n}\r\n\r\nfunction SessionProvider({ children, init=null }) {\r\n\r\n  const [state, dispatch] = React.useReducer(authReducer, init);\r\n  \r\n  return (\r\n    <SessionStateContext.Provider value={state}>\r\n      <SessionDispatchContext.Provider value={dispatch}>\r\n        {children}\r\n      </SessionDispatchContext.Provider>\r\n    </SessionStateContext.Provider>\r\n  );\r\n}\r\n\r\nfunction useSessionState() {\r\n  const context = React.useContext(SessionStateContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useSessionState must be used within a SessionProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\nfunction useSessionDispatch() {\r\n  const context = React.useContext(SessionDispatchContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useSessionDispatch must be used within a SessionProvider\");\r\n  }\r\n  return context;\r\n}\r\n\r\n\r\nexport { SessionProvider, useSessionState, useSessionDispatch };\r\n"]},"metadata":{},"sourceType":"module"}
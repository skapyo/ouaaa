{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\skaPy\\\\IdeaProjects\\\\Next.js-boilerplate\\\\oozie-client\\\\containers\\\\forms\\\\ResetPassword\\\\subForms\\\\ValidateEmailCodeForm.tsx\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { Grid, Typography, CircularProgress, Box } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport TextField from \"components/TextField\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport { EmailContext } from \"containers/forms/ResetPassword/ResetPasswordForm\";\nconst VALIDATE_RESET_PASSWORD_CODE = gql`\n  mutation validateActionCode(\n    $validateActionCodeInfos: ValidateActionCodeInfos\n  ) {\n    validateActionCode(validateActionCodeInfos: $validateActionCodeInfos)\n  }\n`;\nconst useStyles = makeStyles(theme => ({\n  subTitle: {\n    marginBottom: theme.spacing(3)\n  }\n}));\n\nconst ValidateEmailCodeForm = props => {\n  const {\n    formChangeHandler,\n    formValues,\n    clearFormvalues\n  } = props;\n  const context = useContext(EmailContext);\n  const [validateCode, {\n    data,\n    loading,\n    error\n  }] = useMutation(VALIDATE_RESET_PASSWORD_CODE);\n  const styles = useStyles();\n  const {\n    0: focusState,\n    1: setFocusState\n  } = useState(\"input1\");\n  const input1Ref = React.createRef();\n  const input2Ref = React.createRef();\n  const input3Ref = React.createRef();\n  const input4Ref = React.createRef();\n  /* */\n\n  useEffect(() => {\n    // if formvalues is not empty\n    if (Object.keys(formValues).length !== 0) {\n      if (formValues.input1) setFocusState(\"input2\");\n      if (formValues.input2) setFocusState(\"input3\");\n      if (formValues.input3) setFocusState(\"input4\");\n      if (formValues.input4) setFocusState(\"\");\n    }\n  }, [formValues]);\n  useEffect(() => {\n    // @ts-ignore\n    if (focusState === \"input1\") input1Ref.current.focus(); // @ts-ignore\n\n    if (focusState === \"input2\") input2Ref.current.focus(); // @ts-ignore\n\n    if (focusState === \"input3\") input3Ref.current.focus(); // @ts-ignore\n\n    if (focusState === \"input4\") input4Ref.current.focus();\n  }, [focusState]);\n  useEffect(() => {\n    if (focusState === \"\") {\n      const code = \"\".concat(formValues.input1, formValues.input2, formValues.input3, formValues.input4);\n      const intCode = parseInt(code, 10);\n      validateCode({\n        variables: {\n          validateActionCodeInfos: {\n            codeId: context.codeId,\n            code: intCode\n          }\n        }\n      });\n    }\n  }, [focusState]);\n  useEffect(() => {\n    if (data && !data.validateActionCode) {\n      clearFormvalues();\n      setFocusState(\"input1\");\n    }\n  }, [data]);\n  return __jsx(React.Fragment, null, __jsx(Typography, {\n    variant: \"h6\",\n    className: styles.subTitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, \"Entrez le code pr\\xE9sent dans l'email:\"), __jsx(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"space-between\",\n    alignItems: \"center\",\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, __jsx(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, __jsx(TextField, {\n    name: \"input1\",\n    inputProps: {\n      style: {\n        textAlign: \"center\"\n      }\n    },\n    variant: \"outlined\",\n    InputLabelProps: {\n      shrink: false\n    },\n    inputRef: input1Ref,\n    value: formValues.input1 || \"\",\n    onChange: formChangeHandler,\n    disabled: focusState === \"input1\" ? false : true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, __jsx(TextField, {\n    name: \"input2\",\n    inputProps: {\n      style: {\n        textAlign: \"center\"\n      }\n    },\n    variant: \"outlined\",\n    InputLabelProps: {\n      shrink: false\n    },\n    inputRef: input2Ref,\n    value: formValues.input2 || \"\",\n    onChange: formChangeHandler,\n    disabled: focusState === \"input2\" ? false : true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, __jsx(TextField, {\n    name: \"input3\",\n    inputProps: {\n      style: {\n        textAlign: \"center\"\n      }\n    },\n    variant: \"outlined\",\n    InputLabelProps: {\n      shrink: false\n    },\n    inputRef: input3Ref,\n    value: formValues.input3 || \"\",\n    onChange: formChangeHandler,\n    disabled: focusState === \"input3\" ? false : true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  })), __jsx(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, __jsx(TextField, {\n    name: \"input4\",\n    inputProps: {\n      style: {\n        textAlign: \"center\"\n      }\n    },\n    variant: \"outlined\",\n    InputLabelProps: {\n      shrink: false\n    },\n    inputRef: input4Ref,\n    value: formValues.input4 || \"\",\n    onChange: formChangeHandler,\n    disabled: focusState === \"input4\" ? false : true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }))), loading && __jsx(Box, {\n    mt: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, __jsx(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 11\n    }\n  })), data && !data.validateActionCode && __jsx(Box, {\n    mt: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, \"Le code renseign\\xE9 n'est pas correct, veuillez r\\xE9essayer.\"));\n};\n\nexport default ValidateEmailCodeForm;","map":{"version":3,"sources":["C:/Users/skaPy/IdeaProjects/Next.js-boilerplate/oozie-client/containers/forms/ResetPassword/subForms/ValidateEmailCodeForm.tsx"],"names":["React","useEffect","useState","useContext","Grid","Typography","CircularProgress","Box","makeStyles","TextField","gql","useMutation","EmailContext","VALIDATE_RESET_PASSWORD_CODE","useStyles","theme","subTitle","marginBottom","spacing","ValidateEmailCodeForm","props","formChangeHandler","formValues","clearFormvalues","context","validateCode","data","loading","error","styles","focusState","setFocusState","input1Ref","createRef","input2Ref","input3Ref","input4Ref","Object","keys","length","input1","input2","input3","input4","current","focus","code","concat","intCode","parseInt","variables","validateActionCodeInfos","codeId","validateActionCode","style","textAlign","shrink"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\"\r\nimport { RenderCallback } from \"components/controllers/FormController\"\r\nimport { Grid, Typography, CircularProgress, Box } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core\"\r\nimport TextField from \"components/TextField\"\r\nimport gql from \"graphql-tag\"\r\nimport { useMutation } from \"@apollo/react-hooks\"\r\nimport { EmailContext } from \"containers/forms/ResetPassword/ResetPasswordForm\"\r\n\r\nconst VALIDATE_RESET_PASSWORD_CODE = gql`\r\n  mutation validateActionCode(\r\n    $validateActionCodeInfos: ValidateActionCodeInfos\r\n  ) {\r\n    validateActionCode(validateActionCodeInfos: $validateActionCodeInfos)\r\n  }\r\n`\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  subTitle: {\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n}))\r\n\r\nconst ValidateEmailCodeForm: RenderCallback = (props) => {\r\n  const { formChangeHandler, formValues, clearFormvalues } = props\r\n\r\n  const context = useContext(EmailContext)\r\n\r\n  const [validateCode, { data, loading, error }] = useMutation(\r\n    VALIDATE_RESET_PASSWORD_CODE\r\n  )\r\n  const styles = useStyles()\r\n  const [focusState, setFocusState] = useState<string>(\"input1\")\r\n\r\n  const input1Ref = React.createRef()\r\n  const input2Ref = React.createRef()\r\n  const input3Ref = React.createRef()\r\n  const input4Ref = React.createRef()\r\n\r\n  /* */\r\n  useEffect(() => {\r\n    // if formvalues is not empty\r\n    if (Object.keys(formValues).length !== 0) {\r\n      if (formValues.input1) setFocusState(\"input2\")\r\n      if (formValues.input2) setFocusState(\"input3\")\r\n      if (formValues.input3) setFocusState(\"input4\")\r\n      if (formValues.input4) setFocusState(\"\")\r\n    }\r\n  }, [formValues])\r\n\r\n  useEffect(() => {\r\n    // @ts-ignore\r\n    if (focusState === \"input1\") input1Ref.current.focus()\r\n    // @ts-ignore\r\n    if (focusState === \"input2\") input2Ref.current.focus()\r\n    // @ts-ignore\r\n    if (focusState === \"input3\") input3Ref.current.focus()\r\n    // @ts-ignore\r\n    if (focusState === \"input4\") input4Ref.current.focus()\r\n  }, [focusState])\r\n\r\n  useEffect(() => {\r\n    if (focusState === \"\") {\r\n      const code = \"\".concat(\r\n        formValues.input1,\r\n        formValues.input2,\r\n        formValues.input3,\r\n        formValues.input4\r\n      )\r\n      const intCode = parseInt(code, 10)\r\n\r\n      validateCode({\r\n        variables: {\r\n          validateActionCodeInfos: {\r\n            codeId: context.codeId,\r\n            code: intCode,\r\n          },\r\n        },\r\n      })\r\n    }\r\n  }, [focusState])\r\n\r\n  useEffect(() => {\r\n    if (data && !data.validateActionCode) {\r\n      clearFormvalues()\r\n      setFocusState(\"input1\")\r\n    }\r\n  }, [data])\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"h6\" className={styles.subTitle}>\r\n        Entrez le code présent dans l'email:\r\n      </Typography>\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"space-between\"\r\n        alignItems=\"center\"\r\n        spacing={2}\r\n      >\r\n        <Grid item xs={3}>\r\n          <TextField\r\n            name=\"input1\"\r\n            inputProps={{ style: { textAlign: \"center\" } }}\r\n            variant=\"outlined\"\r\n            InputLabelProps={{ shrink: false }}\r\n            inputRef={input1Ref}\r\n            value={formValues.input1 || \"\"}\r\n            onChange={formChangeHandler}\r\n            disabled={focusState === \"input1\" ? false : true}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <TextField\r\n            name=\"input2\"\r\n            inputProps={{ style: { textAlign: \"center\" } }}\r\n            variant=\"outlined\"\r\n            InputLabelProps={{ shrink: false }}\r\n            inputRef={input2Ref}\r\n            value={formValues.input2 || \"\"}\r\n            onChange={formChangeHandler}\r\n            disabled={focusState === \"input2\" ? false : true}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <TextField\r\n            name=\"input3\"\r\n            inputProps={{ style: { textAlign: \"center\" } }}\r\n            variant=\"outlined\"\r\n            InputLabelProps={{ shrink: false }}\r\n            inputRef={input3Ref}\r\n            value={formValues.input3 || \"\"}\r\n            onChange={formChangeHandler}\r\n            disabled={focusState === \"input3\" ? false : true}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <TextField\r\n            name=\"input4\"\r\n            inputProps={{ style: { textAlign: \"center\" } }}\r\n            variant=\"outlined\"\r\n            InputLabelProps={{ shrink: false }}\r\n            inputRef={input4Ref}\r\n            value={formValues.input4 || \"\"}\r\n            onChange={formChangeHandler}\r\n            disabled={focusState === \"input4\" ? false : true}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      {loading && (\r\n        <Box mt={3}>\r\n          <CircularProgress />\r\n        </Box>\r\n      )}\r\n      {data && !data.validateActionCode && (\r\n        <Box mt={3}>\r\n          Le code renseigné n'est pas correct, veuillez réessayer.\r\n        </Box>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ValidateEmailCodeForm\r\n"]},"metadata":{},"sourceType":"module"}